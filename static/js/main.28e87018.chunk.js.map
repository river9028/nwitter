{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Profile","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","type","autoFocus","onChange","value","target","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAcount","setNewAcount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","attachmentURL","src","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28e87018.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useEffect, useState } from 'react';\nimport { authService, dbService } from 'fbase';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  const getMyNweet = async () => {\n    const nweets = await dbService\n      .collection('nweets')\n      .where('creatorId', '==', userObj.uid)\n      .orderBy('createdAt')\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n\n  // useEffect(() => {\n  //   getMyNweet();\n  // }, []);\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          autoFocus\n          onChange={onChange}\n          placeholder=\"DisplayName\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <button className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log out\n      </button>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { authService } from 'fbase';\n\nfunction AuthForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAcount, setNewAcount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onChange = (event) => {\n    // console.log(event.target.name);\n    const {\n      target: { name, value },\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAcount) {\n        // create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password,\n        );\n      } else {\n        // log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAcount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAcount ? 'Create Account' : 'Log In'}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAcount ? 'Sign in.' : 'Create Account'}\n      </span>\n    </>\n  );\n}\n\nexport default AuthForm;\n","import React, { useState } from 'react';\nimport AuthForm from 'components/AuthForm';\nimport { firebaseInstance, authService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentURL && <img src={nweetObj.attachmentURL} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { dbService, storageService } from 'fbase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nfunction NweetFactory({ userObj }) {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onSubmit = async (event) => {\n    if (nweet === '') {\n      return;\n    }\n    event.preventDefault();\n    let attachmentURL = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, 'data_url');\n      attachmentURL = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentURL,\n    };\n    await dbService.collection('nweets').add(nweetObj);\n    setNweet('');\n    setAttachment('');\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    // console.log(event.target.files);\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      // console.log(finishedEvent);\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment('');\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n          value={nweet}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"Nweet\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n}\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fbase';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\nconst Home = ({ userObj }) => {\n  // console.log('userObj', userObj);\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection('nweets').onSnapshot((snapshot) => {\n      // 실시간 db변화를 감지. read, delete, update 모두 포함\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nfunction Navigation({ userObj }) {\n  return (\n    <nav>\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : 'Profile'}\n            </span>{' '}\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Profile from 'routes/Profile';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <div\n              style={{\n                maxWidth: 890,\n                width: '100%',\n                margin: '0 auto',\n                marginTop: 80,\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  // console.log(authService.currentUser);\n  // setInterval(() => {\n  //   console.log(authService.currentUser);\n  // }, 2000);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        'Initializing...'\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}